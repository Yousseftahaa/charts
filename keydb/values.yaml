nameOverride: ""
fullnameOverride: ""

imageRepository: eqalpha/keydb
imageTag: x86_64_v6.3.4
imagePullPolicy: IfNotPresent
imagePullSecrets: []

nodes: 3

password: ""
existingSecret: ""
existingSecretPasswordKey: "password"
port: 6379
portName: server
internalPort: 6379
internalPortName: keydb

threads: 2

multiMaster: "yes"
activeReplicas: "yes"
protectedMode: "no"
appendonly: "no"

annotations: {}

configExtraArgs:
  - flash-enabled yes
  - flash-path /data/flash
  # - somesimple: "argument"
  # - client-output-buffer-limit: ["normal", "0", "0", "0"]
  # - client-output-buffer-limit: ["replica", "268435456", "67108864", "60"]
  # - client-output-buffer-limit: ["pubsub", "33554432", "8388608", "60"]

podAnnotations: {}

tolerations: {}
  # - effect: NoSchedule
  #   key: key
  #   operator: Equal
  #   value: value

nodeSelector: {}
  # topology.kubernetes.io/region: some-region

topologySpreadConstraints: []
# - maxSkew: 1
#   ## Optional keys
#   # whenUnsatisfiable: DoNotSchedule
#   # topologyKey: "topology.kubernetes.io/zone"
#   # minDomains: 1
#   # nodeAffinityPolicy: Honor
#   # nodeTaintsPolicy: Honor

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - '{{ include "keydb.name" . }}'
          - key: app.kubernetes.io/instance
            operator: In
            values:
            - '{{ .Release.Name }}'
        topologyKey: "kubernetes.io/hostname"

additionalAffinities: {}

podDisruptionBudget:
  enabled: true
  maxUnavailable: 1

# Additional init containers
extraInitContainers:
  - name: init-flash-dir
    image: busybox:1.36
    command: ["sh", "-c", "rm -rf /data/flash/* && mkdir -p /data/flash"]
    volumeMounts:
      - name: data
        mountPath: /data

# Additional sidecar containers
extraContainers: []
# - name: backup
#   image: minio/mc:latest

# Volumes that can be used in init and sidecar containers
extraVolumes: []
#  - name: volume-from-secret
#    secret:
#      secretName: secret-to-mount
#  - name: empty-dir-volume
#    emptyDir: {}

# Liveness Probe
livenessProbe:
  enabled: true
  custom: {}
  #  tcpSocket:
  #    port: keydb
  #  initialDelaySeconds: 30
  initialDelaySeconds: 20
  periodSeconds: 5
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 5

# Readiness Probe
readinessProbe:
  enabled: true
  custom: {}
  #  tcpSocket:
  #    port: keydb
  #  initialDelaySeconds: 30
  initialDelaySeconds: 20
  periodSeconds: 5
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 5

# Random UUID for readiness GET probe
readinessProbeRandomUuid: "90f717dd-0e68-43b8-9363-fddaad00d6c9"

# Startup Probe
startupProbe:
  enabled: true
  custom: {}
  periodSeconds: 5
  timeoutSeconds: 1
  failureThreshold: 24

# Lifecycle Hooks
lifecycle: {}

persistentVolume:
  enabled: true
  accessModes:
    - ReadWriteOnce
  selector: {}
  size: 1Gi
  emptyDir: {}

resources: {}

securityContext: {}
keydb:
  securityContext: {}

service:
  annotations: {}
  appProtocol:
    enabled: false

serviceAccount:
  enabled: false
  create: true
  name: ""
  extraSpec: {}

loadBalancer:
  enabled: false
  annotations: {}
  extraSpec: {}

serviceMonitor:
  enabled: false
  labels:
  annotations:
  interval: 30s

exporter:
  enabled: false
  imageRepository: oliver006/redis_exporter
  imageTag: v1.48.0-alpine
  pullPolicy: IfNotPresent
  port: 9121
  portName: redis-exporter
  scrapePath: /metrics
  livenessProbe:
    httpGet:
      path: /health
      port: redis-exporter
  readinessProbe:
    httpGet:
      path: /health
      port: redis-exporter
  startupProbe:
    httpGet:
      path: /health
      port: redis-exporter
    failureThreshold: 24
    periodSeconds: 5
  resources: {}
  securityContext: {}
  extraArgs: []

scripts:
  enabled: false
  resources: {}
  securityContext: {}
  cleanupCoredumps:
    enabled: false
    minutes: 1440
  cleanupTempfiles:
    enabled: true
    minutes: 60
